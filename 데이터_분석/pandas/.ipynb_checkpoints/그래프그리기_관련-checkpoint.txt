<matplotlib 로 그래프 작업할때 상용>
import matplotlib.pyplot as plt
import seaborn as sns

plt.rcParams['figure.figsize']=(4,3)  # figure 사이즈 변경
plt.rcParams['scatter.marker']='*'

#한글 폰트 적용하기/ 보통  맑은 고딕체 사용
from matplotlib import font_manager, rc
font = 'C:/Windows/Fonts/Malgun.ttf'
font_name = font_manager.FontProperties(fname=font).get_name()
rc('font', family=font_name)

<matplotlib plt.>
1. 그림판 만들기                        		fig=plt.figure()
2. 그림판 하부plot(여러개)           		fig.add_subplot(2,1,1)
3. 그래프:   	예)	plt.plot(x,y,'r.-.', data=df)
			plt.title('Boxplot')
			plt.xlabel('Gender')
			plt.ylabel('Total_bill')

<saeborn sns.>
fig=plt.figure()      
axes=fig.add_subplot(1,1,1)   => 이렇게 변수axes에 넣어야 하부명령 가능
axes.hist(data=tips, x='total_bill', bins=10,) 
axes.set_title('Histogram of Total Bill')
axes.set_xlabel('청구서 합계')

<pandas df.plot> 빠른 속도
 # tips.plot()는 line그래프이므로 수치형 컬럼만 찾아서 게산함
 # plot은 그래프함수만 모아놓은 함수로 다양한 그래프 지원
    - 'line' : line plot (default)
    - 'bar' : vertical bar plot
    - 'barh' : horizontal bar plot
    - 'hist' : histogram
    - 'box' : boxplot
    - 'kde' : Kernel Density Estimation plot
    - 'density' : same as 'kde'
    - 'area' : area plot
    - 'pie' : pie plot
    - 'scatter' : scatter plot (DataFrame only)
    - 'hexbin' : hexbin plot (DataFrame only)
-----------------------------------------------------

<그래프 종류별 쓰임새>
plot(linechart) :  수치형 & 연속형데이터
		시계열 또는 데이터의 흐름에 따라 변화하는 수치를 확인하는 그래프
        	수치형/연속형 데이터가 적합, 특히 시계열/ 단변량 데이터 유용
histogram   : 단일 수치형
		숫자형 데이터의 분포와 빈도를 표현 
        	(수치형/연속형 데이터/ 단변량에 가장 적합)
boxplot  : 단일 수치형 또는 범주형(label) & 수치형(x)
		집단간의 분포 차이를 표현/데이터 분포확인/이상치 확인 위한 그래프
bar 그래프 : 수치형(height) & 범주형(x)
		범주형 데이터 간의 수치형 값의 차이를 비교하기 위한 그래프
		(수치형/ 범주형 모두 가능)  
pie 그래프:  수치형(x) & 범주형(label)
		범주형데이터 간의 수치형 값의 비율차이를 비교하기 위한 그래프
		seaborn에는 pie plot 없음	
scatter : 수치형 데이터(2개 이상)
		산점도- 두 집단의 분포 및 데이터간의 연관성 확인
		수치형 2개 이상 데이터 간의 상관관계 확인(분포 등) 그래프
density

<seaborn>
scatterplot
barplot/countplot
baxplot
kdeplot (kernel density estimation)
  : 변수 2개일때 (1개일 경우 histogram과 비슷하고 2개일 경우에는 scatter와 비슷 )

histplot(histogram + kde)
regplot( regression + scatter)
jointplot(scatter + histogram)
violineplot : boxplot + kde 합친 느낌 
pairplot --각 변수간에 히스토그램, 산점도그래프
  겹치는 그래프 빼고 다른 그래프 추가방법도 있음
pair_grid = sns.PairGrid(tips) 
pair_grid = pair_grid.map_upper(sns.regplot) 
pair_grid = pair_grid.map_lower(sns.kdeplot, fill = True) 
pair_grid = pair_grid.map_diag(sns.histplot, kde=True)

--------------------------------------------------------
* 자료형 종류
 1) 수치형 : 이산형: 셀 수 있는 숫자형  (예: 정수)
         	연속형: 키, 몸무게, 날씨, 시간 등  (예: 실수)
 2) 범주형 : 카테고리형 (주로 문자형)
        	-- 순위형 자료: 평점 선호도 
            -- 명목형 자료: 혈액형, 성별/ 문자로 구별할 있는 

* (평균) 회귀선 regression : 
    독립변수(원인), 종속변수(결과) 간의 연관성 확인
    y=ax +b  ==> 회귀선의 식(1차 선형식 lm), 회귀식
    a(기울기),b(절편)를 구해야.
        --> 회귀는 통계에서는 매우 중요한 개념 

* 표준편차/분산/ 표본, 모집단: 신뢰구간 등 통계 개념 알기 

------------------------------------------------------
<팁 & 주의할 점>
# seaborn에서도 겹치는 부분 간격 확보! 꼭 plt.tight_layout() 해야
plt.tight_layout()  

#  순서 지키도록
  legend 등 기본 그래프가 그려진 뒤에 작동하도록
  순서를 마지막 쪽에 놓는다.   
  figure는 앞으로, sunplot은 꼭  plt,plot 앞에 있어야 

# pie 차트 그릴때 : 소수 두자리 %로 나타내고 싶을때 
autopct = '%.2f%%'
기타 옵션: autopct = '%.2f%%', startangle = 90, counterclock = False,
explode = [0.07, 0.05], shadow = True

# 그래프를 그릴때는 숫자만 필요하므로 .value_counts()함수 사용하여 숫자만 가져오는 것도 괜찮음 
tips['sex'].value_counts()

# diff() : 간격 조정 가능람 / 옮기고 게산(뺄셈)   ==> 총 갯수는 안바뀜
# shift() : 데이터를 한칸 등  옮김/ 인덱스가 위아래로 바꿔줄 수 있음 --움직이는 것만 ==갯수는 안바뀜

# seaborn 색상 관련
cmap, palette, hue
hue: 제3의 데이터의 열이름을 써서 색상데이터로 넣음- ex) hue='sex'
palette: palette 전체 설정은 sns.set_palette('twilight') // Reds, Blues 등
    개별 설정은 plot 만들때 palette='Set2' 등 넣는다
cmap으로 색상 설정해 줘야 할 경우 --heatmap


