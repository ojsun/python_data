
=== API  파파고 번역기 ===

import requests, json
import os
import sys
import urllib.request

CLIENT_ID = "2mXHw0nAQ0AbErbtjDHH"
CLIENT_SECRET = "gIsYyg4FNQ"         ==>app_key 

client_id = "2mXHw0nAQ0AbErbtjDHH" # 개발자센터에서 발급받은 Client ID 값
client_secret = "gIsYyg4FNQ"                # 개발자센터에서 발급받은 Client Secret 값
encText = urllib.parse.quote("반갑습니다")
data = "source=ko&target=en&text=" + encText
url = "https://openapi.naver.com/v1/papago/n2mt"
request = urllib.request.Request(url)
request.add_header("X-Naver-Client-Id",client_id)
request.add_header("X-Naver-Client-Secret",client_secret)
response = urllib.request.urlopen(request, data=data.encode("utf-8"))
rescode = response.getcode()
if(rescode==200):
    response_body = response.read()
    print(response_body.decode('utf-8'))
else:
    print("Error Code:" + rescode)

json.loads(response_body.decode('utf-8'))

--위에 코드와 같음-실제 실행/json에 대해
url = 'https://openapi.naver.com/v1/papago/n2mt'
msg = "데이터 사이언스는 재미있습니다."
params = { "source": "ko", "target": "en", "text": msg }
headers = { "Content-Type": "application/json",
            "X-Naver-Client-Id": CLIENT_ID,             ==> 먼저 코딩했으면 가능
            "X-Naver-Client-Secret": CLIENT_SECRET }
response = requests.post(url, json.dumps(params), headers=headers)
print(response)
print(response.json()["message"]["result"]["translatedText"])


---번역기 
def translate(msg, source = "ko", target = "en"):
    url = "https://openapi.naver.com/v1/papago/n2mt"
    params = { "source": source, "target": target, "text": msg }
    headers = {"Content-Type": "application/json",
    	"X-Naver-Client-Id": CLIENT_ID,
    	"X-Naver-Client-Secret": CLIENT_SECRET}
    response = requests.post(url, json.dumps(params), headers=headers)
    if response.status_code == 200:
        return response.json()["message"]["result"]["translatedText"]
    else:
        return response.status_code

---시도해보기
translate('만들면서 배우는 웹 개발 A to Z')
